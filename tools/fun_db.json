{
    "fmpz_poly": {
        "code": {
            "2norm": [
                "2norm"
            ], 
            "2norm_normalised_bits": [
                "2norm_normalised_bits"
            ], 
            "CRT_ui": [
                "CRT_ui"
            ], 
            "add": [
                "add"
            ], 
            "add_series": [
                "add_series"
            ], 
            "bit_pack": [
                "bit_pack"
            ], 
            "bit_unpack": [
                "bit_unpack"
            ], 
            "bound_roots": [
                "bound_roots"
            ], 
            "chebyshev_t": [
                "chebyshev_t"
            ], 
            "chebyshev_u": [
                "chebyshev_u"
            ], 
            "clear": [
                "clear"
            ], 
            "compose": [
                "compose"
            ], 
            "compose_divconquer": [
                "compose_divconquer"
            ], 
            "compose_horner": [
                "compose_horner"
            ], 
            "compose_series": [
                "compose_series"
            ], 
            "compose_series_brent_kung": [
                "compose_series_brent_kung"
            ], 
            "compose_series_horner": [
                "compose_series_horner"
            ], 
            "content": [
                "content"
            ], 
            "cos_minpoly": [
                "cos_minpoly"
            ], 
            "cyclotomic": [
                "cyclotomic"
            ], 
            "derivative": [
                "derivative"
            ], 
            "discriminant": [
                "discriminant"
            ], 
            "div": [
                "div"
            ], 
            "div_basecase": [
                "div_basecase"
            ], 
            "div_divconquer": [
                "div_divconquer"
            ], 
            "div_divconquer_recursive": [
                "div_divconquer_recursive"
            ], 
            "div_preinv": [
                "div_preinv"
            ], 
            "div_root": [
                "div_root"
            ], 
            "div_series": [
                "div_series"
            ], 
            "divides": [
                "divides"
            ], 
            "divrem": [
                "divrem"
            ], 
            "divrem_basecase": [
                "divrem_basecase"
            ], 
            "divrem_divconquer": [
                "divrem_divconquer"
            ], 
            "divrem_divconquer_recursive": [
                "divrem_divconquer_recursive"
            ], 
            "divrem_preinv": [
                "divrem_preinv"
            ], 
            "divremlow_divconquer_recursive": [
                "divremlow_divconquer_recursive"
            ], 
            "equal": [
                "equal"
            ], 
            "equal_trunc": [
                "equal_trunc"
            ], 
            "eta_qexp": [
                "eta_qexp"
            ], 
            "evaluate_divconquer_fmpq": [
                "evaluate_divconquer_fmpq"
            ], 
            "evaluate_divconquer_fmpz": [
                "evaluate_divconquer_fmpz"
            ], 
            "evaluate_fmpq": [
                "evaluate_fmpq"
            ], 
            "evaluate_fmpz": [
                "evaluate_fmpz"
            ], 
            "evaluate_fmpz_vec": [
                "evaluate_fmpz_vec"
            ], 
            "evaluate_horner_fmpq": [
                "evaluate_horner_fmpq"
            ], 
            "evaluate_horner_fmpz": [
                "evaluate_horner_fmpz"
            ], 
            "evaluate_mod": [
                "evaluate_mod"
            ], 
            "evaluate_mpq": [
                "evaluate_mpq"
            ], 
            "fit_length": [
                "fit_length"
            ], 
            "fprint": [
                "fprint"
            ], 
            "fprint_pretty": [
                "fprint_pretty"
            ], 
            "fread": [
                "fread"
            ], 
            "fread_pretty": [
                "fread_pretty"
            ], 
            "gcd": [
                "gcd"
            ], 
            "gcd_heuristic": [
                "gcd_heuristic"
            ], 
            "gcd_modular": [
                "gcd_modular"
            ], 
            "gcd_subresultant": [
                "gcd_subresultant"
            ], 
            "get_coeff_fmpz": [
                "get_coeff_fmpz"
            ], 
            "get_coeff_si": [
                "get_coeff_si"
            ], 
            "get_coeff_ui": [
                "get_coeff_ui"
            ], 
            "get_nmod_poly": [
                "get_nmod_poly"
            ], 
            "get_str": [
                "get_str"
            ], 
            "get_str_pretty": [
                "get_str_pretty"
            ], 
            "hensel_build_tree": [
                "hensel_build_tree"
            ], 
            "hensel_continue_lift": [
                "hensel_continue_lift"
            ], 
            "hensel_lift": [], 
            "hensel_lift_once": [
                "hensel_lift_once"
            ], 
            "hensel_lift_only_inverse": [
                "hensel_lift_only_inverse"
            ], 
            "hensel_lift_tree": [
                "hensel_lift_tree"
            ], 
            "hensel_lift_tree_recursive": [
                "hensel_lift_tree_recursive"
            ], 
            "hensel_lift_without_inverse": [
                "hensel_lift_without_inverse"
            ], 
            "hensel_start_lift": [], 
            "init": [
                "init"
            ], 
            "inlines": [
                "max_limbs", 
                "height", 
                "read_pretty", 
                "is_x", 
                "debug", 
                "set_length", 
                "zero", 
                "pseudo_divrem", 
                "print", 
                "degree", 
                "print_pretty", 
                "scalar_smod_fmpz", 
                "is_one", 
                "length", 
                "scalar_fdiv_mpz", 
                "one", 
                "equal_fmpz", 
                "scalar_divexact_mpz", 
                "xgcd", 
                "scalar_mul_mpz", 
                "set_coeff_mpz", 
                "max_bits", 
                "is_unit", 
                "truncate", 
                "scalar_mod_fmpz", 
                "read", 
                "get_coeff_mpz"
            ], 
            "interpolate_fmpz_vec": [
                "interpolate_fmpz_vec"
            ], 
            "inv_series": [
                "inv_series"
            ], 
            "inv_series_basecase": [
                "inv_series_basecase"
            ], 
            "inv_series_newton": [
                "inv_series_newton"
            ], 
            "is_squarefree": [
                "is_squarefree"
            ], 
            "lcm": [
                "lcm"
            ], 
            "monomial_to_newton": [
                "monomial_to_newton"
            ], 
            "mul": [
                "mul"
            ], 
            "mul_KS": [
                "mul_KS"
            ], 
            "mul_SS": [
                "mul_SS"
            ], 
            "mul_classical": [
                "mul_classical"
            ], 
            "mul_karatsuba": [
                "mul_karatsuba"
            ], 
            "mulhigh_classical": [
                "mulhigh_classical"
            ], 
            "mulhigh_karatsuba_n": [], 
            "mulhigh_n": [
                "mulhigh_n"
            ], 
            "mullow": [
                "mullow"
            ], 
            "mullow_KS": [
                "mullow_KS"
            ], 
            "mullow_SS": [
                "mullow_SS"
            ], 
            "mullow_classical": [
                "mullow_classical"
            ], 
            "mullow_karatsuba_n": [
                "mullow_karatsuba_n"
            ], 
            "mulmid_classical": [
                "mulmid_classical"
            ], 
            "neg": [
                "neg"
            ], 
            "newton_to_monomial": [
                "newton_to_monomial"
            ], 
            "normalise": [
                "normalise"
            ], 
            "pow": [
                "pow"
            ], 
            "pow_addchains": [
                "pow_addchains"
            ], 
            "pow_binexp": [
                "pow_binexp"
            ], 
            "pow_binomial": [
                "pow_binomial"
            ], 
            "pow_multinomial": [
                "pow_multinomial"
            ], 
            "pow_small": [
                "pow_small"
            ], 
            "pow_trunc": [
                "pow_trunc"
            ], 
            "powers_clear": [
                "powers_clear"
            ], 
            "powers_precompute": [
                "powers_precompute"
            ], 
            "preinvert": [
                "preinvert"
            ], 
            "primitive_part": [
                "primitive_part"
            ], 
            "product_roots_fmpz_vec": [
                "product_roots_fmpz_vec"
            ], 
            "pseudo_div": [
                "pseudo_div"
            ], 
            "pseudo_divrem_basecase": [
                "pseudo_divrem_basecase"
            ], 
            "pseudo_divrem_cohen": [
                "pseudo_divrem_cohen"
            ], 
            "pseudo_divrem_divconquer": [
                "pseudo_divrem_divconquer"
            ], 
            "pseudo_rem": [
                "pseudo_rem"
            ], 
            "pseudo_rem_cohen": [
                "pseudo_rem_cohen"
            ], 
            "randtest": [
                "randtest"
            ], 
            "realloc": [
                "realloc"
            ], 
            "rem": [
                "rem"
            ], 
            "rem_basecase": [
                "rem_basecase"
            ], 
            "rem_powers_precomp": [
                "rem_powers_precomp"
            ], 
            "resultant": [
                "resultant"
            ], 
            "resultant_euclidean": [
                "resultant_euclidean"
            ], 
            "resultant_modular": [
                "resultant_modular"
            ], 
            "reverse": [
                "reverse"
            ], 
            "revert_series": [
                "revert_series"
            ], 
            "revert_series_lagrange": [
                "revert_series_lagrange"
            ], 
            "revert_series_lagrange_fast": [
                "revert_series_lagrange_fast"
            ], 
            "revert_series_newton": [
                "revert_series_newton"
            ], 
            "scalar_addmul_fmpz": [
                "scalar_addmul_fmpz"
            ], 
            "scalar_divexact_fmpz": [
                "scalar_divexact_fmpz"
            ], 
            "scalar_divexact_si": [
                "scalar_divexact_si"
            ], 
            "scalar_divexact_ui": [
                "scalar_divexact_ui"
            ], 
            "scalar_fdiv_2exp": [
                "scalar_fdiv_2exp"
            ], 
            "scalar_fdiv_fmpz": [
                "scalar_fdiv_fmpz"
            ], 
            "scalar_fdiv_si": [
                "scalar_fdiv_si"
            ], 
            "scalar_fdiv_ui": [
                "scalar_fdiv_ui"
            ], 
            "scalar_mul_2exp": [
                "scalar_mul_2exp"
            ], 
            "scalar_mul_fmpz": [
                "scalar_mul_fmpz"
            ], 
            "scalar_mul_si": [
                "scalar_mul_si"
            ], 
            "scalar_mul_ui": [
                "scalar_mul_ui"
            ], 
            "scalar_submul_fmpz": [
                "scalar_submul_fmpz"
            ], 
            "scalar_tdiv_2exp": [
                "scalar_tdiv_2exp"
            ], 
            "scalar_tdiv_fmpz": [
                "scalar_tdiv_fmpz"
            ], 
            "scalar_tdiv_si": [
                "scalar_tdiv_si"
            ], 
            "scalar_tdiv_ui": [
                "scalar_tdiv_ui"
            ], 
            "set": [
                "set"
            ], 
            "set_coeff_fmpz": [
                "set_coeff_fmpz"
            ], 
            "set_coeff_si": [
                "set_coeff_si"
            ], 
            "set_coeff_ui": [
                "set_coeff_ui"
            ], 
            "set_fmpz": [
                "set_fmpz"
            ], 
            "set_mpz": [
                "set_mpz"
            ], 
            "set_nmod_poly": [
                "set_nmod_poly"
            ], 
            "set_nmod_poly_unsigned": [
                "set_nmod_poly_unsigned"
            ], 
            "set_si": [
                "set_si"
            ], 
            "set_str": [
                "set_str"
            ], 
            "set_trunc": [
                "set_trunc"
            ], 
            "set_ui": [
                "set_ui"
            ], 
            "shift_left": [
                "shift_left"
            ], 
            "shift_right": [
                "shift_right"
            ], 
            "signature": [
                "signature"
            ], 
            "sqr": [], 
            "sqr_KS": [
                "sqr_KS"
            ], 
            "sqr_classical": [
                "sqr_classical"
            ], 
            "sqr_karatsuba": [], 
            "sqrlow": [
                "sqrlow"
            ], 
            "sqrlow_KS": [
                "sqrlow_KS"
            ], 
            "sqrlow_classical": [
                "sqrlow_classical"
            ], 
            "sqrlow_karatsuba_n": [
                "sqrlow_karatsuba_n"
            ], 
            "sqrt": [
                "sqrt"
            ], 
            "sqrt_classical": [
                "sqrt_classical"
            ], 
            "sub": [
                "sub"
            ], 
            "sub_series": [
                "sub_series"
            ], 
            "swap": [
                "swap"
            ], 
            "swinnerton_dyer": [
                "swinnerton_dyer"
            ], 
            "taylor_shift": [
                "taylor_shift"
            ], 
            "taylor_shift_divconquer": [
                "taylor_shift_divconquer"
            ], 
            "taylor_shift_horner": [
                "taylor_shift_horner"
            ], 
            "taylor_shift_multi_mod": [
                "taylor_shift_multi_mod"
            ], 
            "theta_qexp": [
                "theta_qexp"
            ], 
            "xgcd_modular": [
                "xgcd_modular"
            ], 
            "zero_coeffs": [
                "zero_coeffs"
            ]
        }, 
        "functions": [
            "init", 
            "init2", 
            "realloc", 
            "fit_length", 
            "clear", 
            "normalise", 
            "set_length", 
            "length", 
            "degree", 
            "set", 
            "set_ui", 
            "set_si", 
            "set_fmpz", 
            "set_mpz", 
            "set_str", 
            "set_str", 
            "get_str", 
            "get_str", 
            "get_str_pretty", 
            "get_str_pretty", 
            "zero", 
            "one", 
            "zero_coeffs", 
            "swap", 
            "reverse", 
            "reverse", 
            "truncate", 
            "set_trunc", 
            "randtest", 
            "randtest_unsigned", 
            "randtest_not_zero", 
            "get_coeff_si", 
            "set_coeff_si", 
            "get_coeff_ui", 
            "set_coeff_ui", 
            "set_coeff_fmpz", 
            "get_coeff_fmpz", 
            "equal", 
            "equal_trunc", 
            "is_one", 
            "is_one", 
            "is_unit", 
            "is_x", 
            "equal_fmpz", 
            "add", 
            "add", 
            "add_series", 
            "sub", 
            "sub", 
            "sub_series", 
            "neg", 
            "scalar_mul_ui", 
            "scalar_mul_si", 
            "scalar_mul_fmpz", 
            "scalar_addmul_fmpz", 
            "scalar_submul_fmpz", 
            "scalar_fdiv_ui", 
            "scalar_fdiv_si", 
            "scalar_fdiv_fmpz", 
            "scalar_tdiv_ui", 
            "scalar_tdiv_si", 
            "scalar_tdiv_fmpz", 
            "scalar_divexact_ui", 
            "scalar_divexact_si", 
            "scalar_divexact_fmpz", 
            "scalar_fdiv_2exp", 
            "scalar_tdiv_2exp", 
            "scalar_mul_2exp", 
            "scalar_mod_fmpz", 
            "scalar_smod_fmpz", 
            "bit_pack", 
            "bit_unpack", 
            "bit_unpack_unsigned", 
            "bit_pack", 
            "bit_unpack", 
            "bit_unpack_unsigned", 
            "mul_classical", 
            "mul_classical", 
            "mullow_classical", 
            "mullow_classical", 
            "mulhigh_classical", 
            "mulhigh_classical", 
            "mulmid_classical", 
            "mulmid_classical", 
            "mul_karatsuba", 
            "mul_karatsuba", 
            "mullow_karatsuba_n", 
            "mullow_karatsuba_n", 
            "mulhigh_karatsuba_n", 
            "mulhigh_karatsuba_n", 
            "mul_KS", 
            "mul_KS", 
            "mullow_KS", 
            "mullow_KS", 
            "mul_SS", 
            "mul_SS", 
            "mullow_SS", 
            "mullow_SS", 
            "mul", 
            "mul", 
            "mullow", 
            "mullow", 
            "mulhigh_n", 
            "sqr_KS", 
            "sqr_KS", 
            "sqr_karatsuba", 
            "sqr_karatsuba", 
            "sqr_classical", 
            "sqr_classical", 
            "sqr", 
            "sqr", 
            "sqrlow_KS", 
            "sqrlow_KS", 
            "sqrlow_karatsuba_n", 
            "sqrlow_karatsuba_n", 
            "sqrlow_classical", 
            "sqrlow_classical", 
            "sqrlow", 
            "sqrlow", 
            "pow_multinomial", 
            "pow_multinomial", 
            "pow_binomial", 
            "pow_binomial", 
            "pow_binexp", 
            "pow_binexp", 
            "pow_addchains", 
            "pow_addchains", 
            "pow_small", 
            "pow", 
            "pow", 
            "pow_trunc", 
            "shift_left", 
            "shift_right", 
            "shift_left", 
            "shift_right", 
            "2norm", 
            "2norm", 
            "2norm_normalised_bits", 
            "max_limbs", 
            "max_bits", 
            "height", 
            "gcd_subresultant", 
            "gcd_subresultant", 
            "gcd_heuristic", 
            "gcd_heuristic", 
            "gcd_modular", 
            "gcd_modular", 
            "gcd", 
            "gcd", 
            "lcm", 
            "lcm", 
            "resultant_euclidean", 
            "resultant_euclidean", 
            "resultant_modular", 
            "resultant_modular", 
            "resultant", 
            "resultant", 
            "xgcd_modular", 
            "xgcd_modular", 
            "xgcd", 
            "xgcd", 
            "discriminant", 
            "discriminant", 
            "content", 
            "content", 
            "primitive_part", 
            "primitive_part", 
            "is_squarefree", 
            "is_squarefree", 
            "divrem_basecase", 
            "divrem_basecase", 
            "divrem_divconquer_recursive", 
            "divrem_divconquer", 
            "divrem_divconquer", 
            "divrem", 
            "divrem", 
            "div_basecase", 
            "div_basecase", 
            "divremlow_divconquer_recursive", 
            "div_divconquer_recursive", 
            "div_divconquer", 
            "div_divconquer", 
            "div", 
            "div", 
            "preinvert", 
            "preinvert", 
            "div_preinv", 
            "div_preinv", 
            "divrem_preinv", 
            "divrem_preinv", 
            "powers_precompute", 
            "powers_precompute", 
            "powers_clear", 
            "powers_clear", 
            "rem_powers_precomp", 
            "rem_powers_precomp", 
            "rem_basecase", 
            "rem_basecase", 
            "rem", 
            "rem", 
            "div_root", 
            "div_root", 
            "inv_series_basecase", 
            "inv_series_basecase", 
            "inv_series_newton", 
            "inv_series_newton", 
            "inv_series", 
            "inv_series", 
            "div_series", 
            "div_series", 
            "divides", 
            "divides", 
            "pseudo_divrem_basecase", 
            "pseudo_divrem_basecase", 
            "pseudo_divrem_divconquer", 
            "pseudo_divrem_divconquer", 
            "pseudo_divrem_cohen", 
            "pseudo_divrem_cohen", 
            "pseudo_rem_cohen", 
            "pseudo_rem_cohen", 
            "pseudo_divrem", 
            "pseudo_divrem", 
            "pseudo_div", 
            "pseudo_div", 
            "pseudo_rem", 
            "pseudo_rem", 
            "derivative", 
            "derivative", 
            "evaluate_divconquer_fmpz", 
            "evaluate_horner_fmpz", 
            "evaluate_horner_fmpz", 
            "evaluate_fmpz", 
            "evaluate_fmpz", 
            "evaluate_horner_fmpq", 
            "evaluate_horner_fmpq", 
            "evaluate_divconquer_fmpq", 
            "evaluate_divconquer_fmpq", 
            "evaluate_fmpq", 
            "evaluate_fmpq", 
            "evaluate_mpq", 
            "evaluate_mod", 
            "evaluate_mod", 
            "compose_horner", 
            "compose_horner", 
            "compose_divconquer", 
            "compose_divconquer", 
            "compose", 
            "compose", 
            "taylor_shift_horner", 
            "taylor_shift_horner", 
            "taylor_shift_divconquer", 
            "taylor_shift_divconquer", 
            "taylor_shift_multi_mod", 
            "taylor_shift_multi_mod", 
            "taylor_shift", 
            "taylor_shift", 
            "compose_series_brent_kung", 
            "compose_series_brent_kung", 
            "compose_series_horner", 
            "compose_series_horner", 
            "compose_series", 
            "compose_series", 
            "revert_series_lagrange", 
            "revert_series_lagrange", 
            "revert_series_lagrange_fast", 
            "revert_series_lagrange_fast", 
            "revert_series_newton", 
            "revert_series_newton", 
            "revert_series", 
            "revert_series", 
            "sqrt_classical", 
            "sqrt_classical", 
            "sqrt", 
            "sqrt", 
            "signature", 
            "signature", 
            "fprint", 
            "fprint_pretty", 
            "fprint_pretty", 
            "print", 
            "print_pretty", 
            "fread", 
            "fread_pretty", 
            "read", 
            "read_pretty", 
            "debug", 
            "get_nmod_poly", 
            "set_nmod_poly", 
            "set_nmod_poly_unsigned", 
            "CRT_ui", 
            "CRT_ui", 
            "product_roots_fmpz_vec", 
            "product_roots_fmpz_vec", 
            "monomial_to_newton", 
            "newton_to_monomial", 
            "evaluate_fmpz_vec", 
            "interpolate_fmpz_vec", 
            "hensel_build_tree", 
            "hensel_lift_without_inverse", 
            "hensel_lift_without_inverse", 
            "hensel_lift_only_inverse", 
            "hensel_lift_only_inverse", 
            "hensel_lift_tree_recursive", 
            "hensel_lift_tree", 
            "hensel_start_lift", 
            "hensel_continue_lift", 
            "hensel_lift_once", 
            "scalar_mul_mpz", 
            "scalar_divexact_mpz", 
            "scalar_fdiv_mpz", 
            "set_coeff_mpz", 
            "get_coeff_mpz", 
            "bound_roots", 
            "bound_roots", 
            "cyclotomic", 
            "cyclotomic", 
            "cos_minpoly", 
            "cos_minpoly", 
            "swinnerton_dyer", 
            "swinnerton_dyer", 
            "chebyshev_t", 
            "chebyshev_t", 
            "chebyshev_u", 
            "chebyshev_u", 
            "eta_qexp", 
            "eta_qexp", 
            "theta_qexp", 
            "theta_qexp"
        ], 
        "signatures": {
            "2norm": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_2norm", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "2norm_normalised_bits": {
                "args": [
                    [
                        "const fmpz *", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "len"
                    ]
                ], 
                "name": "_fmpz_poly_2norm_normalised_bits", 
                "prefix": "FLINT_DLL", 
                "rtype": "mp_bitcnt_t"
            }, 
            "CRT_ui": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_t", 
                        "m1"
                    ], 
                    [
                        "const nmod_poly_t", 
                        "poly2"
                    ], 
                    [
                        "int", 
                        "sign"
                    ]
                ], 
                "name": "fmpz_poly_CRT_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "add": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_add", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "add_series": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_add_series", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "bit_pack": {
                "args": [
                    [
                        "fmpz_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "mp_bitcnt_t", 
                        "bit_size"
                    ]
                ], 
                "name": "fmpz_poly_bit_pack", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "bit_unpack": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const fmpz_t", 
                        "f"
                    ], 
                    [
                        "mp_bitcnt_t", 
                        "bit_size"
                    ]
                ], 
                "name": "fmpz_poly_bit_unpack", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "bit_unpack_unsigned": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const fmpz_t", 
                        "f"
                    ], 
                    [
                        "mp_bitcnt_t", 
                        "bit_size"
                    ]
                ], 
                "name": "fmpz_poly_bit_unpack_unsigned", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "bound_roots": {
                "args": [
                    [
                        "fmpz_t", 
                        "bound"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_bound_roots", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "chebyshev_t": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_chebyshev_t", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "chebyshev_u": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_chebyshev_u", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "clear": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_clear", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "compose": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_compose", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "compose_divconquer": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_compose_divconquer", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "compose_horner": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_compose_horner", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "compose_series": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_compose_series", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "compose_series_brent_kung": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_compose_series_brent_kung", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "compose_series_horner": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_compose_series_horner", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "content": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_content", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "cos_minpoly": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "ulong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_cos_minpoly", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "cyclotomic": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_cyclotomic", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "debug": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_debug", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "degree": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_degree", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "slong"
            }, 
            "derivative": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_derivative", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "discriminant": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_discriminant", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "div": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_div", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "div_basecase": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_div_basecase", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "div_divconquer": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_div_divconquer", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "div_divconquer_recursive": {
                "args": [
                    [
                        "fmpz *", 
                        "Q"
                    ], 
                    [
                        "fmpz *", 
                        "temp"
                    ], 
                    [
                        "const fmpz *", 
                        "A"
                    ], 
                    [
                        "const fmpz *", 
                        "B"
                    ], 
                    [
                        "slong", 
                        "lenB"
                    ]
                ], 
                "name": "_fmpz_poly_div_divconquer_recursive", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "div_preinv": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B_inv"
                    ]
                ], 
                "name": "fmpz_poly_div_preinv", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "div_root": {
                "args": [
                    [
                        "fmpz *", 
                        "Q"
                    ], 
                    [
                        "const fmpz *", 
                        "A"
                    ], 
                    [
                        "slong", 
                        "len"
                    ], 
                    [
                        "const fmpz_t", 
                        "c"
                    ]
                ], 
                "name": "_fmpz_poly_div_root", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "div_series": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_div_series", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "divides": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "q"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "a"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "b"
                    ]
                ], 
                "name": "fmpz_poly_divides", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "divrem": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_divrem", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "divrem_basecase": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_divrem_basecase", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "divrem_divconquer": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_divrem_divconquer", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "divrem_divconquer_recursive": {
                "args": [
                    [
                        "fmpz *", 
                        "Q"
                    ], 
                    [
                        "fmpz *", 
                        "BQ"
                    ], 
                    [
                        "fmpz *", 
                        "W"
                    ], 
                    [
                        "const fmpz *", 
                        "A"
                    ], 
                    [
                        "const fmpz *", 
                        "B"
                    ], 
                    [
                        "slong", 
                        "lenB"
                    ]
                ], 
                "name": "_fmpz_poly_divrem_divconquer_recursive", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "divrem_preinv": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B_inv"
                    ]
                ], 
                "name": "fmpz_poly_divrem_preinv", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "divremlow_divconquer_recursive": {
                "args": [
                    [
                        "fmpz *", 
                        "Q"
                    ], 
                    [
                        "fmpz *", 
                        "QB"
                    ], 
                    [
                        "const fmpz *", 
                        "A"
                    ], 
                    [
                        "const fmpz *", 
                        "B"
                    ], 
                    [
                        "slong", 
                        "lenB"
                    ]
                ], 
                "name": "_fmpz_poly_divremlow_divconquer_recursive", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "equal": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_equal", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "equal_fmpz": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const fmpz_t", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_equal_fmpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "equal_trunc": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_equal_trunc", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "eta_qexp": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "slong", 
                        "e"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_eta_qexp", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_divconquer_fmpq": {
                "args": [
                    [
                        "fmpq_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpq_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_divconquer_fmpq", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_divconquer_fmpz": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const fmpz_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_divconquer_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_fmpq": {
                "args": [
                    [
                        "fmpq_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpq_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_fmpq", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_fmpz": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_fmpz_vec": {
                "args": [
                    [
                        "fmpz *", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz *", 
                        "a"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_fmpz_vec", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_horner_fmpq": {
                "args": [
                    [
                        "fmpq_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpq_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_horner_fmpq", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_horner_fmpz": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_horner_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "evaluate_mod": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "mp_limb_t", 
                        "a"
                    ], 
                    [
                        "mp_limb_t", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_mod", 
                "prefix": "FLINT_DLL", 
                "rtype": "mp_limb_t"
            }, 
            "evaluate_mpq": {
                "args": [
                    [
                        "mpq_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const mpq_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_evaluate_mpq", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "fit_length": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "len"
                    ]
                ], 
                "name": "fmpz_poly_fit_length", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "fprint": {
                "args": [
                    [
                        "FILE *", 
                        "file"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_fprint", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "fprint_pretty": {
                "args": [
                    [
                        "FILE *", 
                        "file"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const char *", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_fprint_pretty", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "fread": {
                "args": [
                    [
                        "FILE *", 
                        "file"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_fread", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "fread_pretty": {
                "args": [
                    [
                        "FILE *", 
                        "file"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "char * *", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_fread_pretty", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "gcd": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_gcd", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "gcd_heuristic": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_gcd_heuristic", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "gcd_modular": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_gcd_modular", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "gcd_subresultant": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_gcd_subresultant", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "get_coeff_fmpz": {
                "args": [
                    [
                        "fmpz_t", 
                        "x"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_get_coeff_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "get_coeff_mpz": {
                "args": [
                    [
                        "mpz_t", 
                        "x"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_get_coeff_mpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "get_coeff_si": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_get_coeff_si", 
                "prefix": "FLINT_DLL", 
                "rtype": "slong"
            }, 
            "get_coeff_ui": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_get_coeff_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "ulong"
            }, 
            "get_nmod_poly": {
                "args": [
                    [
                        "nmod_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_get_nmod_poly", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "get_str": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_get_str", 
                "prefix": "FLINT_DLL", 
                "rtype": "char *"
            }, 
            "get_str_pretty": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const char *", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_get_str_pretty", 
                "prefix": "FLINT_DLL", 
                "rtype": "char *"
            }, 
            "height": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_height", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "hensel_build_tree": {
                "args": [
                    [
                        "slong *", 
                        "link"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "v"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "w"
                    ], 
                    [
                        "const nmod_poly_factor_t", 
                        "fac"
                    ]
                ], 
                "name": "fmpz_poly_hensel_build_tree", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "hensel_continue_lift": {
                "args": [
                    [
                        "fmpz_poly_factor_t", 
                        "lifted_fac"
                    ], 
                    [
                        "slong *", 
                        "link"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "v"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "w"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "slong", 
                        "prev"
                    ], 
                    [
                        "slong", 
                        "curr"
                    ], 
                    [
                        "slong", 
                        "N"
                    ], 
                    [
                        "const fmpz_t", 
                        "p"
                    ]
                ], 
                "name": "_fmpz_poly_hensel_continue_lift", 
                "prefix": "FLINT_DLL", 
                "rtype": "slong"
            }, 
            "hensel_lift_once": {
                "args": [
                    [
                        "fmpz_poly_factor_t", 
                        "lifted_fac"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const nmod_poly_factor_t", 
                        "local_fac"
                    ], 
                    [
                        "slong", 
                        "N"
                    ]
                ], 
                "name": "fmpz_poly_hensel_lift_once", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "hensel_lift_only_inverse": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Aout"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "Bout"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "G"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "H"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "a"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "b"
                    ], 
                    [
                        "const fmpz_t", 
                        "p"
                    ], 
                    [
                        "const fmpz_t", 
                        "p1"
                    ]
                ], 
                "name": "fmpz_poly_hensel_lift_only_inverse", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "hensel_lift_tree": {
                "args": [
                    [
                        "slong *", 
                        "link"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "v"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "w"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "slong", 
                        "r"
                    ], 
                    [
                        "const fmpz_t", 
                        "p"
                    ], 
                    [
                        "slong", 
                        "e0"
                    ], 
                    [
                        "slong", 
                        "e1"
                    ], 
                    [
                        "slong", 
                        "inv"
                    ]
                ], 
                "name": "fmpz_poly_hensel_lift_tree", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "hensel_lift_tree_recursive": {
                "args": [
                    [
                        "slong *", 
                        "link"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "v"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "w"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "slong", 
                        "j"
                    ], 
                    [
                        "slong", 
                        "inv"
                    ], 
                    [
                        "const fmpz_t", 
                        "p0"
                    ], 
                    [
                        "const fmpz_t", 
                        "p1"
                    ]
                ], 
                "name": "fmpz_poly_hensel_lift_tree_recursive", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "hensel_lift_without_inverse": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Gout"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "Hout"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "g"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "h"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "a"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "b"
                    ], 
                    [
                        "const fmpz_t", 
                        "p"
                    ], 
                    [
                        "const fmpz_t", 
                        "p1"
                    ]
                ], 
                "name": "fmpz_poly_hensel_lift_without_inverse", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "hensel_start_lift": {
                "args": [
                    [
                        "fmpz_poly_factor_t", 
                        "lifted_fac"
                    ], 
                    [
                        "slong *", 
                        "link"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "v"
                    ], 
                    [
                        "fmpz_poly_t *", 
                        "w"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const nmod_poly_factor_t", 
                        "local_fac"
                    ], 
                    [
                        "slong", 
                        "target_exp"
                    ]
                ], 
                "name": "_fmpz_poly_hensel_start_lift", 
                "prefix": "FLINT_DLL", 
                "rtype": "slong"
            }, 
            "init": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_init", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "init2": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "alloc"
                    ]
                ], 
                "name": "fmpz_poly_init2", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "interpolate_fmpz_vec": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const fmpz *", 
                        "xs"
                    ], 
                    [
                        "const fmpz *", 
                        "ys"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_interpolate_fmpz_vec", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "inv_series": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Qinv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_inv_series", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "inv_series_basecase": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Qinv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_inv_series_basecase", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "inv_series_newton": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Qinv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_inv_series_newton", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "is_one": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "op"
                    ]
                ], 
                "name": "fmpz_poly_is_one", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "is_squarefree": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_is_squarefree", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "is_unit": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "op"
                    ]
                ], 
                "name": "fmpz_poly_is_unit", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "is_x": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "op"
                    ]
                ], 
                "name": "fmpz_poly_is_x", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "lcm": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_lcm", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "length": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_length", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "slong"
            }, 
            "max_bits": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_max_bits", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "slong"
            }, 
            "max_limbs": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_max_limbs", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "ulong"
            }, 
            "monomial_to_newton": {
                "args": [
                    [
                        "fmpz *", 
                        "poly"
                    ], 
                    [
                        "const fmpz *", 
                        "roots"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "_fmpz_poly_monomial_to_newton", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mul": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_mul", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mul_KS": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_mul_KS", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mul_SS": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_mul_SS", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mul_classical": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_mul_classical", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mul_karatsuba": {
                "args": [
                    [
                        "fmpz *", 
                        "res"
                    ], 
                    [
                        "const fmpz *", 
                        "poly1"
                    ], 
                    [
                        "slong", 
                        "len1"
                    ], 
                    [
                        "const fmpz *", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "len2"
                    ]
                ], 
                "name": "_fmpz_poly_mul_karatsuba", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mulhigh_classical": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "start"
                    ]
                ], 
                "name": "fmpz_poly_mulhigh_classical", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mulhigh_karatsuba_n": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "length"
                    ]
                ], 
                "name": "fmpz_poly_mulhigh_karatsuba_n", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mulhigh_n": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_mulhigh_n", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mullow": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_mullow", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mullow_KS": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_mullow_KS", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mullow_SS": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_mullow_SS", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mullow_classical": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_mullow_classical", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mullow_karatsuba_n": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_mullow_karatsuba_n", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "mulmid_classical": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_mulmid_classical", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "neg": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_neg", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "newton_to_monomial": {
                "args": [
                    [
                        "fmpz *", 
                        "poly"
                    ], 
                    [
                        "const fmpz *", 
                        "roots"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "_fmpz_poly_newton_to_monomial", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "normalise": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "_fmpz_poly_normalise", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "one": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_one", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "pow": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "e"
                    ]
                ], 
                "name": "fmpz_poly_pow", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pow_addchains": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "e"
                    ]
                ], 
                "name": "fmpz_poly_pow_addchains", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pow_binexp": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "e"
                    ]
                ], 
                "name": "fmpz_poly_pow_binexp", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pow_binomial": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "e"
                    ]
                ], 
                "name": "fmpz_poly_pow_binomial", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pow_multinomial": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "e"
                    ]
                ], 
                "name": "fmpz_poly_pow_multinomial", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pow_small": {
                "args": [
                    [
                        "fmpz *", 
                        "res"
                    ], 
                    [
                        "const fmpz *", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "len"
                    ], 
                    [
                        "ulong", 
                        "e"
                    ]
                ], 
                "name": "_fmpz_poly_pow_small", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pow_trunc": {
                "args": [
                    [
                        "fmpz *", 
                        "res"
                    ], 
                    [
                        "const fmpz *", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "e"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "_fmpz_poly_pow_trunc", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "powers_clear": {
                "args": [
                    [
                        "fmpz_poly_powers_precomp_t", 
                        "pinv"
                    ]
                ], 
                "name": "fmpz_poly_powers_clear", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "powers_precompute": {
                "args": [
                    [
                        "fmpz_poly_powers_precomp_t", 
                        "pinv"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_powers_precompute", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "preinvert": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "B_inv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_preinvert", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "primitive_part": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_primitive_part", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "print": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_print", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "print_pretty": {
                "args": [
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const char *", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_print_pretty", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "product_roots_fmpz_vec": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const fmpz *", 
                        "xs"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_product_roots_fmpz_vec", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pseudo_div": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "ulong *", 
                        "d"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_pseudo_div", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pseudo_divrem": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "ulong *", 
                        "d"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_pseudo_divrem", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "pseudo_divrem_basecase": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "ulong *", 
                        "d"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_pseudo_divrem_basecase", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pseudo_divrem_cohen": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_pseudo_divrem_cohen", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pseudo_divrem_divconquer": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "ulong *", 
                        "d"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_pseudo_divrem_divconquer", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pseudo_rem": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "ulong *", 
                        "d"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_pseudo_rem", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "pseudo_rem_cohen": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_pseudo_rem_cohen", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "randtest": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "flint_rand_t", 
                        "state"
                    ], 
                    [
                        "slong", 
                        "len"
                    ], 
                    [
                        "mp_bitcnt_t", 
                        "bits"
                    ]
                ], 
                "name": "fmpz_poly_randtest", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "randtest_not_zero": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "flint_rand_t", 
                        "state"
                    ], 
                    [
                        "slong", 
                        "len"
                    ], 
                    [
                        "mp_bitcnt_t", 
                        "bits"
                    ]
                ], 
                "name": "fmpz_poly_randtest_not_zero", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "randtest_unsigned": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "flint_rand_t", 
                        "state"
                    ], 
                    [
                        "slong", 
                        "len"
                    ], 
                    [
                        "mp_bitcnt_t", 
                        "bits"
                    ]
                ], 
                "name": "fmpz_poly_randtest_unsigned", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "read": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_read", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "read_pretty": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "char * *", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_read_pretty", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "int"
            }, 
            "realloc": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "alloc"
                    ]
                ], 
                "name": "fmpz_poly_realloc", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "rem": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_rem", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "rem_basecase": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ]
                ], 
                "name": "fmpz_poly_rem_basecase", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "rem_powers_precomp": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "R"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "A"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "B"
                    ], 
                    [
                        "const fmpz_poly_powers_precomp_t", 
                        "B_inv"
                    ]
                ], 
                "name": "fmpz_poly_rem_powers_precomp", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "resultant": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_resultant", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "resultant_euclidean": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_resultant_euclidean", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "resultant_modular": {
                "args": [
                    [
                        "fmpz_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_resultant_modular", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "reverse": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_reverse", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "revert_series": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Qinv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_revert_series", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "revert_series_lagrange": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Qinv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_revert_series_lagrange", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "revert_series_lagrange_fast": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Qinv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_revert_series_lagrange_fast", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "revert_series_newton": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "Qinv"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "Q"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_revert_series_newton", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_addmul_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_addmul_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_divexact_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_divexact_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_divexact_mpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const mpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_divexact_mpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "scalar_divexact_si": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_divexact_si", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_divexact_ui": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "ulong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_divexact_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_fdiv_2exp": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "ulong", 
                        "exp"
                    ]
                ], 
                "name": "fmpz_poly_scalar_fdiv_2exp", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_fdiv_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_fdiv_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_fdiv_mpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const mpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_fdiv_mpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "scalar_fdiv_si": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_fdiv_si", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_fdiv_ui": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "ulong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_fdiv_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_mod_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_mod_fmpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "scalar_mul_2exp": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "ulong", 
                        "exp"
                    ]
                ], 
                "name": "fmpz_poly_scalar_mul_2exp", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_mul_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_mul_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_mul_mpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const mpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_mul_mpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "scalar_mul_si": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_mul_si", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_mul_ui": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "ulong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_mul_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_smod_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_smod_fmpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "scalar_submul_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_submul_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_tdiv_2exp": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "ulong", 
                        "exp"
                    ]
                ], 
                "name": "fmpz_poly_scalar_tdiv_2exp", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_tdiv_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_tdiv_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_tdiv_si": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_tdiv_si", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "scalar_tdiv_ui": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "ulong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_scalar_tdiv_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_set", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_coeff_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ], 
                    [
                        "const fmpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_set_coeff_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_coeff_mpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ], 
                    [
                        "const mpz_t", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_set_coeff_mpz", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "set_coeff_si": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ], 
                    [
                        "slong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_set_coeff_si", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_coeff_ui": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ], 
                    [
                        "ulong", 
                        "x"
                    ]
                ], 
                "name": "fmpz_poly_set_coeff_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_fmpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const fmpz_t", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_set_fmpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_length": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "newlen"
                    ]
                ], 
                "name": "_fmpz_poly_set_length", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "set_mpz": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const mpz_t", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_set_mpz", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_nmod_poly": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const nmod_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_set_nmod_poly", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_nmod_poly_unsigned": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const nmod_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_set_nmod_poly_unsigned", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_si": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_set_si", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_str": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "const char *", 
                        "str"
                    ]
                ], 
                "name": "fmpz_poly_set_str", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "set_trunc": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_set_trunc", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "set_ui": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_set_ui", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "shift_left": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_shift_left", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "shift_right": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_shift_right", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "signature": {
                "args": [
                    [
                        "slong *", 
                        "r1"
                    ], 
                    [
                        "slong *", 
                        "r2"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_signature", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqr": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "rop"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "op"
                    ]
                ], 
                "name": "fmpz_poly_sqr", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqr_KS": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "rop"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "op"
                    ]
                ], 
                "name": "fmpz_poly_sqr_KS", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqr_classical": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "rop"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "op"
                    ]
                ], 
                "name": "fmpz_poly_sqr_classical", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqr_karatsuba": {
                "args": [
                    [
                        "fmpz *", 
                        "rop"
                    ], 
                    [
                        "const fmpz *", 
                        "op"
                    ], 
                    [
                        "slong", 
                        "len"
                    ]
                ], 
                "name": "_fmpz_poly_sqr_karatsuba", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqrlow": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_sqrlow", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqrlow_KS": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_sqrlow_KS", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqrlow_classical": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_sqrlow_classical", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqrlow_karatsuba_n": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_sqrlow_karatsuba_n", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sqrt": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "b"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_sqrt", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "sqrt_classical": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "b"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "a"
                    ]
                ], 
                "name": "fmpz_poly_sqrt_classical", 
                "prefix": "FLINT_DLL", 
                "rtype": "int"
            }, 
            "sub": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_sub", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "sub_series": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "res"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_sub_series", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "swap": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_swap", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "swinnerton_dyer": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "ulong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_swinnerton_dyer", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "taylor_shift": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "g"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_t", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_taylor_shift", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "taylor_shift_divconquer": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "g"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_t", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_taylor_shift_divconquer", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "taylor_shift_horner": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "g"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_t", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_taylor_shift_horner", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "taylor_shift_multi_mod": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "g"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "const fmpz_t", 
                        "c"
                    ]
                ], 
                "name": "fmpz_poly_taylor_shift_multi_mod", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "theta_qexp": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "f"
                    ], 
                    [
                        "slong", 
                        "e"
                    ], 
                    [
                        "slong", 
                        "n"
                    ]
                ], 
                "name": "fmpz_poly_theta_qexp", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "truncate": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "newlen"
                    ]
                ], 
                "name": "fmpz_poly_truncate", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "xgcd": {
                "args": [
                    [
                        "fmpz_t", 
                        "r"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "s"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "t"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_xgcd", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "xgcd_modular": {
                "args": [
                    [
                        "fmpz_t", 
                        "r"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "s"
                    ], 
                    [
                        "fmpz_poly_t", 
                        "t"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly1"
                    ], 
                    [
                        "const fmpz_poly_t", 
                        "poly2"
                    ]
                ], 
                "name": "fmpz_poly_xgcd_modular", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }, 
            "zero": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ]
                ], 
                "name": "fmpz_poly_zero", 
                "prefix": "FMPZ_POLY_INLINE", 
                "rtype": "void"
            }, 
            "zero_coeffs": {
                "args": [
                    [
                        "fmpz_poly_t", 
                        "poly"
                    ], 
                    [
                        "slong", 
                        "i"
                    ], 
                    [
                        "slong", 
                        "j"
                    ]
                ], 
                "name": "fmpz_poly_zero_coeffs", 
                "prefix": "FLINT_DLL", 
                "rtype": "void"
            }
        }, 
        "tests": {
            "2norm_normalised_bits": [
                "2norm_normalised_bits"
            ], 
            "CRT_ui": [
                "CRT_ui"
            ], 
            "CRT_ui_unsigned": [], 
            "add": [
                "add"
            ], 
            "add_series": [
                "add_series"
            ], 
            "bit_pack": [
                "bit_pack"
            ], 
            "bound_roots": [
                "bound_roots"
            ], 
            "chebyshev_t": [
                "chebyshev_t"
            ], 
            "chebyshev_u": [
                "chebyshev_u"
            ], 
            "compose": [
                "compose"
            ], 
            "compose_divconquer": [
                "compose_divconquer"
            ], 
            "compose_horner": [
                "compose_horner"
            ], 
            "compose_series": [
                "compose_series"
            ], 
            "compose_series_brent_kung": [
                "compose_series_brent_kung"
            ], 
            "compose_series_horner": [
                "compose_series_horner"
            ], 
            "content": [
                "content"
            ], 
            "cos_minpoly": [
                "cos_minpoly"
            ], 
            "cyclotomic": [
                "cyclotomic"
            ], 
            "derivative": [
                "derivative"
            ], 
            "discriminant": [
                "discriminant"
            ], 
            "div_basecase": [
                "div_basecase"
            ], 
            "div_divconquer": [
                "div_divconquer"
            ], 
            "div_preinv": [
                "div_preinv"
            ], 
            "div_root": [
                "div_root"
            ], 
            "div_series": [
                "div_series"
            ], 
            "divides": [
                "divides"
            ], 
            "divrem_basecase": [
                "divrem_basecase"
            ], 
            "divrem_divconquer": [
                "divrem_divconquer"
            ], 
            "divrem_preinv": [
                "divrem_preinv"
            ], 
            "equal_fmpz": [
                "equal_fmpz"
            ], 
            "equal_trunc": [
                "equal_trunc"
            ], 
            "eta_qexp": [
                "eta_qexp"
            ], 
            "evaluate_divconquer_fmpq": [
                "evaluate_divconquer_fmpq"
            ], 
            "evaluate_divconquer_fmpz": [
                "evaluate_divconquer_fmpz"
            ], 
            "evaluate_fmpq": [
                "evaluate_fmpq"
            ], 
            "evaluate_fmpz": [
                "evaluate_fmpz"
            ], 
            "evaluate_horner_fmpq": [
                "evaluate_horner_fmpq"
            ], 
            "evaluate_horner_fmpz": [
                "evaluate_horner_fmpz"
            ], 
            "evaluate_mod": [
                "evaluate_mod"
            ], 
            "evaluate_mpq": [
                "evaluate_mpq"
            ], 
            "gcd": [
                "gcd"
            ], 
            "gcd_heuristic": [
                "gcd_heuristic"
            ], 
            "gcd_modular": [
                "gcd_modular"
            ], 
            "gcd_subresultant": [
                "gcd_subresultant"
            ], 
            "get_coeff_ptr": [], 
            "get_nmod_poly": [
                "get_nmod_poly"
            ], 
            "get_set_coeff_fmpz": [], 
            "get_set_coeff_mpz": [], 
            "get_set_coeff_si": [], 
            "get_set_coeff_ui": [], 
            "get_set_str": [], 
            "get_str": [
                "get_str"
            ], 
            "get_str_pretty": [
                "get_str_pretty"
            ], 
            "hensel_lift": [], 
            "hensel_lift_once": [
                "hensel_lift_once"
            ], 
            "hensel_lift_without_only_inverse": [], 
            "hensel_start_continue_lift": [], 
            "init_realloc_clear": [], 
            "interpolate_fmpz_vec": [
                "interpolate_fmpz_vec"
            ], 
            "inv_series": [
                "inv_series"
            ], 
            "inv_series_basecase": [
                "inv_series_basecase"
            ], 
            "inv_series_newton": [
                "inv_series_newton"
            ], 
            "is_squarefree": [
                "is_squarefree"
            ], 
            "lcm": [
                "lcm"
            ], 
            "mul": [
                "mul"
            ], 
            "mul_KS": [
                "mul_KS"
            ], 
            "mul_SS": [
                "mul_SS"
            ], 
            "mul_classical": [
                "mul_classical"
            ], 
            "mul_karatsuba": [
                "mul_karatsuba"
            ], 
            "mulhigh_classical": [
                "mulhigh_classical"
            ], 
            "mulhigh_karatsuba_n": [
                "mulhigh_karatsuba_n"
            ], 
            "mulhigh_n": [
                "mulhigh_n"
            ], 
            "mullow": [
                "mullow"
            ], 
            "mullow_KS": [
                "mullow_KS"
            ], 
            "mullow_SS": [
                "mullow_SS"
            ], 
            "mullow_classical": [
                "mullow_classical"
            ], 
            "mullow_karatsuba_n": [
                "mullow_karatsuba_n"
            ], 
            "mulmid_classical": [
                "mulmid_classical"
            ], 
            "neg": [
                "neg"
            ], 
            "newton_to_monomial": [
                "newton_to_monomial"
            ], 
            "pow": [
                "pow"
            ], 
            "pow_addchains": [
                "pow_addchains"
            ], 
            "pow_binexp": [
                "pow_binexp"
            ], 
            "pow_binomial": [
                "pow_binomial"
            ], 
            "pow_multinomial": [
                "pow_multinomial"
            ], 
            "pow_trunc": [
                "pow_trunc"
            ], 
            "primitive_part": [
                "primitive_part"
            ], 
            "print_read": [], 
            "print_read_pretty": [], 
            "product_roots_fmpz_vec": [
                "product_roots_fmpz_vec"
            ], 
            "pseudo_div": [
                "pseudo_div"
            ], 
            "pseudo_divrem_basecase": [
                "pseudo_divrem_basecase"
            ], 
            "pseudo_divrem_cohen": [
                "pseudo_divrem_cohen"
            ], 
            "pseudo_divrem_divconquer": [
                "pseudo_divrem_divconquer"
            ], 
            "pseudo_rem": [
                "pseudo_rem"
            ], 
            "pseudo_rem_cohen": [
                "pseudo_rem_cohen"
            ], 
            "rem_basecase": [
                "rem_basecase"
            ], 
            "rem_powers_precomp": [
                "rem_powers_precomp"
            ], 
            "resultant": [
                "resultant"
            ], 
            "resultant_euclidean": [
                "resultant_euclidean"
            ], 
            "resultant_modular": [
                "resultant_modular"
            ], 
            "reverse": [
                "reverse"
            ], 
            "revert_series": [
                "revert_series"
            ], 
            "revert_series_lagrange": [
                "revert_series_lagrange"
            ], 
            "revert_series_lagrange_fast": [
                "revert_series_lagrange_fast"
            ], 
            "revert_series_newton": [
                "revert_series_newton"
            ], 
            "scalar_addmul_fmpz": [
                "scalar_addmul_fmpz"
            ], 
            "scalar_divexact_mpz": [
                "scalar_divexact_mpz"
            ], 
            "scalar_fdiv_mpz": [
                "scalar_fdiv_mpz"
            ], 
            "scalar_mul_fmpz": [
                "scalar_mul_fmpz"
            ], 
            "scalar_mul_mpz": [
                "scalar_mul_mpz"
            ], 
            "scalar_mul_si": [
                "scalar_mul_si"
            ], 
            "scalar_mul_ui": [
                "scalar_mul_ui"
            ], 
            "scalar_submul_fmpz": [
                "scalar_submul_fmpz"
            ], 
            "set_equal": [], 
            "set_fmpz_equal": [], 
            "set_mpz_equal": [], 
            "set_si_equal": [], 
            "set_trunc": [
                "set_trunc"
            ], 
            "set_ui_equal": [], 
            "shift_left_right": [], 
            "signature": [
                "signature"
            ], 
            "sqr": [
                "sqr"
            ], 
            "sqr_KS": [
                "sqr_KS"
            ], 
            "sqr_classical": [
                "sqr_classical"
            ], 
            "sqr_karatsuba": [
                "sqr_karatsuba"
            ], 
            "sqrlow": [
                "sqrlow"
            ], 
            "sqrlow_KS": [
                "sqrlow_KS"
            ], 
            "sqrlow_classical": [
                "sqrlow_classical"
            ], 
            "sqrlow_karatsuba_n": [
                "sqrlow_karatsuba_n"
            ], 
            "sqrt": [
                "sqrt"
            ], 
            "sub": [
                "sub"
            ], 
            "sub_series": [
                "sub_series"
            ], 
            "swap": [
                "swap"
            ], 
            "swinnerton_dyer": [
                "swinnerton_dyer"
            ], 
            "taylor_shift": [
                "taylor_shift"
            ], 
            "taylor_shift_divconquer": [
                "taylor_shift_divconquer"
            ], 
            "taylor_shift_horner": [
                "taylor_shift_horner"
            ], 
            "taylor_shift_multi_mod": [
                "taylor_shift_multi_mod"
            ], 
            "theta_qexp": [
                "theta_qexp"
            ], 
            "xgcd_modular": [
                "xgcd_modular"
            ], 
            "zero": [
                "zero"
            ], 
            "zero_coeffs": [
                "zero_coeffs"
            ]
        }
    }
}